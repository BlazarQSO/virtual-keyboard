/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/controller/keyboard.js":
/*!************************************!*\
  !*** ./src/controller/keyboard.js ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Keyboard; });\n/* harmony import */ var _model_languages__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../model/languages */ \"./src/model/languages.js\");\n\nclass Keyboard {\n  constructor(buttons, cols = 60, viewRow = 7, rowHeight = 30.5) {\n    this.shiftL = false;\n    this.shiftR = false;\n    this.ctrlL = false;\n    this.ctrlR = false;\n    this.altL = false;\n    this.altR = false;\n    this.caps = false;\n    this.ctrlAlt = false;\n    this.scroll = 0;\n    this.viewRow = viewRow - 1;\n    this.inputFrame = [0, this.viewRow];\n    this.cols = cols;\n    this.rowHeight = rowHeight;\n    this.lang = sessionStorage.getItem('lang') || 'firstLang';\n    this.buttons = buttons;\n    this.idBtns = Object.keys(this.buttons);\n    this.select = -1;\n    this.selectionSideLeft = false;\n  }\n\n  create(targetId) {\n    this.createKeyboard(targetId);\n    this.createEvent(targetId);\n  }\n\n  createKeyboard(targetId) {\n    const wrapper = document.createElement('div');\n    wrapper.className = 'wrapper';\n    const input = document.createElement('textarea');\n    input.setAttribute('id', 'input');\n    input.setAttribute('cols', this.cols);\n    input.setAttribute('wrap', 'hard');\n    input.className = 'input';\n    input.addEventListener('keydown', e => {\n      e.preventDefault();\n    }, false);\n    const keyboard = document.createElement('div');\n    keyboard.className = 'keyboard';\n    keyboard.id = 'keyboard';\n\n    for (let i = 0, len = this.idBtns.length; i < len; i += 1) {\n      const btn = document.createElement('button');\n      btn.setAttribute('type', 'button');\n      btn.className = 'button';\n      btn.id = this.idBtns[i];\n      btn.classList.add(this.idBtns[i]);\n\n      if (this.lang === 'secondLang' && !this.buttons[this.idBtns[i]].service) {\n        const letter = this.buttons[this.idBtns[i]].secondLang.signDef;\n        this.buttons[this.idBtns[i]].current = letter;\n      }\n\n      btn.innerHTML = this.buttons[this.idBtns[i]].current;\n      keyboard.append(btn);\n    }\n\n    wrapper.append(input);\n    wrapper.append(keyboard);\n    document.getElementById(targetId).append(wrapper);\n    document.getElementById('capsLock').classList.add('lamp');\n    this.input = input;\n    const firstLang = sessionStorage.getItem('firstLang') || false;\n\n    if (firstLang && firstLang !== 'US') {\n      this.changeLanguages('firstLang', _model_languages__WEBPACK_IMPORTED_MODULE_0__[\"default\"][firstLang]);\n    }\n\n    const secondLang = sessionStorage.getItem('secondLang') || false;\n\n    if (secondLang && secondLang !== 'Russian') {\n      this.changeLanguages('secondLang', _model_languages__WEBPACK_IMPORTED_MODULE_0__[\"default\"][secondLang]);\n    }\n\n    input.focus();\n  }\n\n  createEvent(targetId) {\n    const keyboard = document.getElementById('keyboard');\n    keyboard.addEventListener('mousedown', this.mouseDown.bind(this), false);\n    keyboard.addEventListener('mouseup', this.mouseUp.bind(this), false);\n    this.input.addEventListener('mouseup', this.mouseInputUp.bind(this), false);\n    this.input.addEventListener('mousedown', this.setSelection.bind(this), false);\n    document.getElementById(targetId).addEventListener('keydown', this.keyDown.bind(this), false);\n    document.getElementById(targetId).addEventListener('keyup', this.keyUp.bind(this), false);\n    window.addEventListener('blur', this.keyDefault.bind(this), false);\n  }\n\n  changeLanguages(order, language) {\n    try {\n      for (let i = 0, len = language.length; i < len; i += 1) {\n        const [signDef, signCaps, signShift, signShiftCaps] = language[i];\n        this.buttons[this.idBtns[i]].current = signDef;\n\n        if (this.buttons[this.idBtns[i]][order]) {\n          if (language[i].length === 2) {\n            this.buttons[this.idBtns[i]][order].signDef = signDef;\n            this.buttons[this.idBtns[i]][order].signCaps = signCaps;\n            this.buttons[this.idBtns[i]][order].signShift = signCaps;\n            this.buttons[this.idBtns[i]][order].signShiftCaps = signDef;\n          } else if (language[i].length === 3) {\n            this.buttons[this.idBtns[i]][order].signDef = signDef;\n            this.buttons[this.idBtns[i]][order].signCaps = signCaps;\n            this.buttons[this.idBtns[i]][order].signShift = signShift;\n            this.buttons[this.idBtns[i]][order].signShiftCaps = signShift;\n          } else {\n            this.buttons[this.idBtns[i]][order].signDef = signDef;\n            this.buttons[this.idBtns[i]][order].signCaps = signCaps;\n            this.buttons[this.idBtns[i]][order].signShift = signShift;\n            this.buttons[this.idBtns[i]][order].signShiftCaps = signShiftCaps;\n          }\n        }\n      }\n\n      this.redrawLetters();\n    } catch (error) {\n      this.error = error.message;\n    }\n  }\n\n  writeLetter(current) {\n    const select = this.input.selectionStart;\n    let text = this.input.textContent;\n    text = text.substring(0, select) + current + text.substring(select, text.length);\n    this.input.innerHTML = text;\n\n    if (current !== '    ') {\n      this.input.selectionStart = select + 1;\n      this.input.selectionEnd = select + 1;\n    } else {\n      this.input.selectionStart = select + 4;\n      this.input.selectionEnd = select + 4;\n    }\n\n    const nextLetter = this.input.innerHTML[this.input.selectionStart];\n    let rowsText;\n\n    if (nextLetter === ' ' || nextLetter === '\\n' || nextLetter === undefined) {\n      rowsText = this.parseText();\n    } else {\n      rowsText = this.input.innerHTML.split('\\n');\n    }\n\n    this.getRowHavingCursor(this.input.selectionStart, rowsText);\n  }\n\n  pressKey(id) {\n    if (!this.buttons[id].service) {\n      this.writeLetter(this.buttons[id].current);\n    } else if (this.buttons[id].write) {\n      this.writeLetter(this.buttons[id].write);\n    } else {\n      switch (id) {\n        case 'delete':\n          this.buttonDelete();\n          break;\n\n        case 'backspace':\n          this.buttonBackspace();\n          break;\n\n        case 'shiftLeft':\n          this.buttonLeftShiftDown();\n          break;\n\n        case 'shiftRight':\n          this.buttonRightShiftDown();\n          break;\n\n        case 'controlLeft':\n          this.buttonCtrlDown('left');\n          break;\n\n        case 'controlRight':\n          this.buttonCtrlDown('right');\n          break;\n\n        case 'altLeft':\n          this.buttonAltDown('left');\n          break;\n\n        case 'altRight':\n          this.buttonAltDown('right');\n          break;\n\n        case 'capsLock':\n          this.buttonCapsDown();\n          break;\n\n        case 'arrowLeft':\n          this.buttonArrowLeft();\n          break;\n\n        case 'arrowRight':\n          this.buttonArrowRight();\n          break;\n\n        case 'arrowDown':\n          this.buttonArrowDown();\n          break;\n\n        case 'arrowUp':\n          this.buttonArrowUp();\n          break;\n\n        default:\n          break;\n      }\n    }\n  }\n\n  upKey(id) {\n    switch (id) {\n      case 'shiftLeft':\n        this.buttonLeftShiftUp();\n        break;\n\n      case 'shiftRight':\n        this.buttonRightShiftUp();\n        break;\n\n      case 'controlLeft':\n        this.buttonCtrlUp('left');\n        break;\n\n      case 'controlRight':\n        this.buttonCtrlUp('right');\n        break;\n\n      case 'altLeft':\n        this.buttonAltUp('left');\n        break;\n\n      case 'altRight':\n        this.buttonAltUp('right');\n        break;\n\n      case 'capsLock':\n        this.buttonCapsUp();\n        break;\n\n      default:\n        break;\n    }\n\n    this.input.focus();\n  }\n\n  mouseDown(e) {\n    if (e.target.closest('div').className === 'keyboard' && e.target.id !== 'keyboard') {\n      if (e.code === 'KeyA' && (this.ctrlL || this.ctrlR)) {\n        this.pushCtrlA();\n      } else if (e.code === 'KeyC' && (this.ctrlL || this.ctrlR)) {\n        this.pushCtrlC();\n      } else if (e.code === 'KeyV' && (this.ctrlL || this.ctrlR)) {\n        this.pushCtrlV();\n      } else if (e.target.id !== 'capsLock') {\n        this.pressKey(e.target.id);\n      } else if (!this.buttons.capsLock.down) {\n        this.buttons.capsLock.down = true;\n        document.getElementById(e.target.id).classList.add('press');\n        document.getElementById(e.target.id).classList.toggle('lampActive');\n        this.pressKey(e.target.id);\n      }\n    }\n  }\n\n  mouseUp(e) {\n    if (e.target.closest('div').className === 'keyboard') {\n      this.buttons.capsLock.down = false;\n      this.upKey(e.target.id);\n    }\n  }\n\n  mouseInputUp() {\n    if (this.input.selectionEnd !== this.input.selectionStart) {\n      this.selectionSideLeft = this.input.selectionDirection === 'backward';\n    }\n  }\n\n  keyDown(e) {\n    if (e.code === 'KeyA' && (this.ctrlL || this.ctrlR)) {\n      this.pushCtrlA();\n    } else if (e.code === 'KeyC' && (this.ctrlL || this.ctrlR)) {\n      this.pushCtrlC();\n    } else if (e.code === 'KeyV' && (this.ctrlL || this.ctrlR)) {\n      this.pushCtrlV();\n    } else {\n      const id = e.code.substring(0, 1).toLowerCase() + e.code.substring(1, e.code.length);\n\n      if (document.getElementById(id)) {\n        if (id !== 'capsLock') {\n          document.getElementById(id).classList.add('press');\n          this.pressKey(id);\n        } else if (!this.buttons.capsLock.down) {\n          this.buttons.capsLock.down = true;\n          document.getElementById(id).classList.add('press');\n          document.getElementById(id).classList.toggle('lampActive');\n          this.pressKey(id);\n        }\n      }\n    }\n\n    this.input.focus();\n  }\n\n  keyUp(e) {\n    const id = e.code.substring(0, 1).toLowerCase() + e.code.substring(1, e.code.length);\n\n    if (document.getElementById(id)) {\n      this.buttons.capsLock.down = false;\n      document.getElementById(id).classList.remove('press');\n\n      if (!e.shiftKey) {\n        document.getElementById('shiftLeft').classList.remove('press');\n        document.getElementById('shiftRight').classList.remove('press');\n        this.shiftR = false;\n        this.shiftL = false;\n      }\n\n      this.upKey(id);\n    }\n  }\n\n  keyDefault() {\n    for (let i = 0, len = this.idBtns.length; i < len; i += 1) {\n      document.getElementById(this.idBtns[i]).classList.remove('press');\n    }\n  }\n\n  buttonDelete() {\n    const select = this.input.selectionStart;\n    const selectEnd = this.input.selectionEnd;\n    let text = this.input.textContent;\n\n    if (select === selectEnd) {\n      text = text.substring(0, select) + text.substring(select + 1, text.length);\n    } else {\n      text = text.substring(0, select) + text.substring(selectEnd, text.length);\n    }\n\n    this.input.innerHTML = text;\n    this.input.selectionStart = select;\n    this.input.selectionEnd = select;\n    const rowsText = this.parseText();\n    this.getRowHavingCursor(this.input.selectionStart, rowsText);\n  }\n\n  buttonBackspace() {\n    const select = this.input.selectionStart;\n    let text = this.input.textContent;\n    const selectEnd = this.input.selectionEnd;\n\n    if (select === selectEnd) {\n      text = text.substring(0, select - 1) + text.substring(select, text.length);\n      this.input.innerHTML = text;\n      this.input.selectionStart = select - 1;\n      this.input.selectionEnd = select - 1;\n    } else {\n      text = text.substring(0, select) + text.substring(selectEnd, text.length);\n      this.input.innerHTML = text;\n      this.input.selectionStart = select;\n      this.input.selectionEnd = select;\n    }\n\n    const rowsText = this.parseText();\n    this.getRowHavingCursor(this.input.selectionStart, rowsText);\n  }\n\n  buttonLeftShiftDown() {\n    this.rememberSelect();\n    this.shiftL = true;\n\n    if (!(this.shiftL && this.shiftR)) {\n      this.redrawLetters();\n    }\n  }\n\n  buttonRightShiftDown() {\n    this.rememberSelect();\n    this.shiftR = true;\n\n    if (!(this.shiftL && this.shiftR)) {\n      this.redrawLetters();\n    }\n  }\n\n  buttonLeftShiftUp() {\n    if (this.select > this.input.selectionStart) {\n      this.selectionSideLeft = true;\n    } else {\n      this.selectionSideLeft = false;\n    }\n\n    this.select = -1;\n    this.shiftL = false;\n\n    if (!this.shiftR) {\n      this.redrawLetters();\n    }\n  }\n\n  buttonRightShiftUp() {\n    if (this.select > this.input.selectionStart) {\n      this.selectionSideLeft = true;\n    } else {\n      this.selectionSideLeft = false;\n    }\n\n    this.select = -1;\n    this.shiftR = false;\n\n    if (!this.shiftL) {\n      this.redrawLetters();\n    }\n  }\n\n  rememberSelect() {\n    if (this.input.selectionStart === this.input.selectionEnd) {\n      this.select = this.input.selectionStart;\n    } else if (this.selectionSideLeft) {\n      this.select = this.input.selectionEnd;\n    } else {\n      this.select = this.input.selectionStart;\n    }\n  }\n\n  buttonCtrlDown(direction) {\n    this.ctrlL = direction === 'left' ? true : this.ctrlL;\n    this.ctrlR = direction === 'right' ? true : this.ctrlR;\n\n    if ((this.altL || this.altR) && !this.ctrlAlt) {\n      this.lang = this.lang === 'firstLang' ? 'secondLang' : 'firstLang';\n      sessionStorage.setItem('lang', this.lang);\n      this.ctrlAlt = true;\n      this.redrawLetters();\n    }\n  }\n\n  buttonCtrlUp(direction) {\n    this.ctrlL = direction === 'left' ? false : this.ctrlL;\n    this.ctrlR = direction === 'right' ? false : this.ctrlR;\n\n    if (!this.ctrlL && !this.ctrlR) {\n      this.ctrlAlt = false;\n    }\n  }\n\n  buttonAltDown(direction) {\n    this.altL = direction === 'left' ? true : this.altL;\n    this.altR = direction === 'right' ? true : this.altR;\n\n    if ((this.ctrlL || this.ctrlR) && !this.ctrlAlt) {\n      this.lang = this.lang === 'firstLang' ? 'secondLang' : 'firstLang';\n      sessionStorage.setItem('lang', this.lang);\n      this.ctrlAlt = true;\n      this.redrawLetters();\n    }\n  }\n\n  buttonAltUp(direction) {\n    this.altL = direction === 'left' ? false : this.altL;\n    this.altR = direction === 'right' ? false : this.altR;\n\n    if (!this.altL && !this.altR) {\n      this.ctrlAlt = false;\n    }\n  }\n\n  buttonCapsDown() {\n    if (!this.buttons.capsLock.down) {\n      document.getElementById('capsLock').classList.add('press');\n    }\n\n    this.caps = !this.caps;\n    this.redrawLetters();\n  }\n\n  buttonCapsUp() {\n    if (!this.buttons.capsLock.down) {\n      document.getElementById('capsLock').classList.remove('press');\n    }\n  }\n\n  buttonArrowLeft() {\n    const rowsText = this.parseText();\n\n    if (this.shiftL || this.shiftR) {\n      if (this.select < this.input.selectionEnd) {\n        if (this.input.selectionEnd > 0) {\n          this.input.selectionEnd -= 1;\n        }\n      } else if (this.input.selectionStart > 0) {\n        this.input.selectionStart -= 1;\n      }\n    } else if (this.input.selectionEnd === this.input.selectionStart) {\n      if (this.input.selectionStart > 0) {\n        this.input.selectionStart -= 1;\n        this.input.selectionEnd -= 1;\n      }\n    } else {\n      this.input.selectionEnd = this.input.selectionStart;\n    }\n\n    this.getRowHavingCursor(this.input.selectionStart, rowsText);\n  }\n\n  buttonArrowRight() {\n    const rowsText = this.parseText();\n\n    if (this.shiftL || this.shiftR) {\n      if (this.select > this.input.selectionStart) {\n        this.input.selectionStart += 1;\n      } else {\n        this.input.selectionEnd += 1;\n      }\n    } else if (this.input.selectionEnd === this.input.selectionStart) {\n      this.input.selectionEnd += 1;\n      this.input.selectionStart += 1;\n    } else {\n      this.input.selectionStart = this.input.selectionEnd;\n    }\n\n    this.getRowHavingCursor(this.input.selectionStart, rowsText);\n  }\n\n  buttonArrowDown() {\n    let select;\n\n    if (this.select > this.input.selectionStart) {\n      select = this.input.selectionStart;\n    } else {\n      select = this.input.selectionEnd;\n    }\n\n    const rowsText = this.parseText();\n    const {\n      row,\n      marginLeftSelect\n    } = this.getRowHavingCursor(select, rowsText, 'down');\n\n    if (row < rowsText.length - 1) {\n      if (marginLeftSelect >= rowsText[row + 1].length) {\n        select += rowsText[row].length - marginLeftSelect + rowsText[row + 1].length;\n      } else {\n        select += rowsText[row].length + 1;\n      }\n    } else {\n      select = this.input.innerHTML.length;\n    }\n\n    let overSelectionEnd;\n\n    if (!this.shiftL && !this.shiftR) {\n      if (this.input.selectionStart === this.input.selectionEnd) {\n        this.input.selectionStart = select;\n        this.input.selectionEnd = select;\n      } else {\n        this.input.selectionStart = this.input.selectionEnd;\n      }\n    } else if (this.select > this.input.selectionStart) {\n      overSelectionEnd = this.input.selectionEnd;\n      this.input.selectionStart = select;\n    } else {\n      this.input.selectionEnd = select;\n    }\n\n    if (this.input.selectionStart > overSelectionEnd) {\n      this.input.selectionStart = overSelectionEnd;\n    }\n  }\n\n  buttonArrowUp() {\n    let select;\n\n    if (this.select < this.input.selectionEnd) {\n      select = this.input.selectionEnd;\n    } else {\n      select = this.input.selectionStart;\n    }\n\n    const rowsText = this.parseText();\n    const {\n      row,\n      marginLeftSelect\n    } = this.getRowHavingCursor(select, rowsText, 'up');\n\n    if (row > 0) {\n      if (marginLeftSelect >= rowsText[row - 1].length) {\n        select -= marginLeftSelect + 2;\n      } else {\n        select -= rowsText[row - 1].length + 1;\n      }\n    } else {\n      select = 0;\n    }\n\n    let overSelectionStart;\n\n    if (!this.shiftL && !this.shiftR) {\n      if (this.input.selectionStart === this.input.selectionEnd) {\n        this.input.selectionStart = select;\n        this.input.selectionEnd = select;\n      } else {\n        this.input.selectionEnd = this.input.selectionStart;\n      }\n    } else if (this.select < this.input.selectionEnd) {\n      overSelectionStart = this.input.selectionStart;\n      this.input.selectionEnd = select;\n    } else {\n      this.input.selectionStart = select;\n    }\n\n    if (overSelectionStart > this.input.selectionEnd) {\n      this.input.selectionEnd = overSelectionStart;\n    }\n  }\n\n  getRowHavingCursor(select, rowsText, direction) {\n    let count = 0;\n    let row = 0;\n    let marginLeftSelect = 0;\n\n    for (let i = 0, len = rowsText.length; i < len; i += 1) {\n      count += rowsText[i].length + 1;\n\n      if (select < count) {\n        row = i;\n        len = 0;\n        marginLeftSelect = select - (count - rowsText[i].length);\n      }\n    }\n\n    let nextRow = row;\n    if (direction === 'up') nextRow = row - 1;\n    if (direction === 'down') nextRow = row + 1;\n\n    if (nextRow < this.inputFrame[0]) {\n      this.inputFrame[0] -= 1;\n      this.inputFrame[1] -= 1;\n      this.scroll = nextRow * this.rowHeight;\n      this.input.scrollTop = this.scroll;\n    }\n\n    if (nextRow > this.inputFrame[1]) {\n      this.inputFrame[0] += 1;\n      this.inputFrame[1] += 1;\n      this.scroll = (nextRow - 6) * this.rowHeight;\n      this.input.scrollTop = this.scroll;\n    }\n\n    this.input.scrollTop = this.scroll;\n    return {\n      row,\n      marginLeftSelect\n    };\n  }\n\n  redrawLetters() {\n    for (let key = 0, len = this.idBtns.length; key < len; key += 1) {\n      if (!this.buttons[this.idBtns[key]].service) {\n        if (this.lang === 'firstLang') {\n          this.changeLetter(key, 'firstLang');\n        } else {\n          this.changeLetter(key, 'secondLang');\n        }\n      }\n    }\n  }\n\n  changeLetter(key, lang) {\n    let letter;\n\n    if ((this.shiftL || this.shiftR) && this.caps) {\n      letter = this.buttons[this.idBtns[key]][lang].signShiftCaps;\n      document.getElementById(this.idBtns[key]).innerHTML = letter;\n      this.buttons[this.idBtns[key]].current = letter;\n    } else if (this.caps) {\n      letter = this.buttons[this.idBtns[key]][lang].signCaps;\n      document.getElementById(this.idBtns[key]).innerHTML = letter;\n      this.buttons[this.idBtns[key]].current = letter;\n    } else if (this.shiftL || this.shiftR) {\n      letter = this.buttons[this.idBtns[key]][lang].signShift;\n      document.getElementById(this.idBtns[key]).innerHTML = letter;\n      this.buttons[this.idBtns[key]].current = letter;\n    } else {\n      letter = this.buttons[this.idBtns[key]][lang].signDef;\n      document.getElementById(this.idBtns[key]).innerHTML = letter;\n      this.buttons[this.idBtns[key]].current = letter;\n    }\n  }\n\n  parseText() {\n    const text = this.input.innerHTML;\n    const rowsWithEnter = text.split('\\n');\n    const rowsText = [];\n    const {\n      cols\n    } = this.input;\n\n    for (let i = 0, len = rowsWithEnter.length; i < len; i += 1) {\n      if (rowsWithEnter[i].length <= cols) {\n        rowsText.push(rowsWithEnter[i]);\n      } else {\n        let word = '';\n        let space = '';\n        let row = '';\n        let curIndexWord = 0;\n        let curIndexSpace = 0;\n\n        for (let j = 0, {\n          length\n        } = rowsWithEnter[i]; j < length; j += 1) {\n          if (rowsWithEnter[i].length <= cols) {\n            rowsText.push(rowsWithEnter[i]);\n            length = 0;\n          } else if (rowsWithEnter[i][j] !== ' ') {\n            word += rowsWithEnter[i][j];\n            curIndexWord += 1;\n\n            if (space !== '') {\n              row += space;\n              space = '';\n              curIndexSpace = 0;\n            }\n\n            if (curIndexWord > cols) {\n              rowsText.push(word.slice(0, cols));\n              rowsWithEnter[i] = rowsWithEnter[i].slice(cols);\n              length = rowsWithEnter[i].length;\n              j = -1;\n              word = '';\n              row = '';\n              curIndexWord = 0;\n            }\n\n            if (row.length + curIndexWord > cols) {\n              rowsText.push(row);\n              rowsWithEnter[i] = rowsWithEnter[i].slice(row.length);\n              length = rowsWithEnter[i].length;\n              j = -1;\n              word = '';\n              row = '';\n              curIndexWord = 0;\n            }\n          } else {\n            curIndexSpace += 1;\n            space += ' ';\n\n            if (word !== '') {\n              row += word;\n              word = '';\n              curIndexWord = 0;\n            }\n\n            if (curIndexSpace > cols) {\n              rowsText.push(space.slice(0, cols));\n              rowsWithEnter[i] = rowsWithEnter[i].slice(cols).replace(/^\\s+/g, '');\n              length = rowsWithEnter[i].length;\n              j = -1;\n              space = '';\n              row = '';\n              curIndexSpace = 0;\n            }\n\n            if (row.length + curIndexSpace > cols) {\n              row += String(' ').repeat(cols - row.length);\n              rowsText.push(row);\n              rowsWithEnter[i] = rowsWithEnter[i].slice(cols).replace(/^\\s+/g, '');\n              length = rowsWithEnter[i].length;\n              j = -1;\n              space = '';\n              row = '';\n              curIndexSpace = 0;\n            }\n          }\n        }\n      }\n    }\n\n    const start = this.input.selectionStart;\n    const end = this.input.selectionEnd;\n    this.input.innerHTML = rowsText.join('\\n');\n    this.input.selectionEnd = end - (text.length - this.input.innerHTML.length);\n    this.input.selectionStart = start - (text.length - this.input.innerHTML.length);\n    return rowsText;\n  }\n\n  pushCtrlA() {\n    this.input.selectionStart = 0;\n    this.input.selectionEnd = this.input.innerHTML.length;\n    this.input.scrollTop = this.scroll;\n  }\n\n  pushCtrlC() {\n    const buf = this.input.innerHTML.slice(this.input.selectionStart, this.input.selectionEnd);\n    navigator.clipboard.writeText(buf);\n    this.input.scrollTop = this.scroll;\n  }\n\n  pushCtrlV() {\n    navigator.clipboard.readText().then(buffer => {\n      const text = this.input.innerHTML;\n      const start = this.input.selectionStart;\n      const end = this.input.selectionEnd;\n      this.bufferSelect = end - (end - start) + buffer.length;\n      this.input.innerHTML = text.slice(0, start) + buffer + text.slice(end);\n    }).finally(() => {\n      this.input.focus();\n      this.input.selectionEnd = this.bufferSelect;\n      this.input.selectionStart = this.input.selectionEnd;\n      this.input.scrollTop = this.scroll;\n    }).catch(err => {\n      this.error = err.message;\n    });\n  }\n\n  setSelection() {\n    this.scroll = this.input.scrollTop;\n    const rowScroll = Math.round(this.scroll / this.rowHeight);\n    this.inputFrame[0] = rowScroll;\n    this.inputFrame[1] = rowScroll + this.viewRow;\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/controller/keyboard.js\n");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _model_buttons__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./model/buttons */ \"./src/model/buttons.js\");\n/* harmony import */ var _model_languages__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./model/languages */ \"./src/model/languages.js\");\n/* harmony import */ var _controller_keyboard__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./controller/keyboard */ \"./src/controller/keyboard.js\");\n\n\n\n\nfunction chooseLanguages(languages) {\n  const wrapper = document.createElement('div');\n  wrapper.className = 'wrapperLanguages';\n  const firstSelect = document.createElement('select');\n  firstSelect.setAttribute('id', 'firstLang');\n  firstSelect.className = 'chooseLanguages';\n  const secondSelect = document.createElement('select');\n  secondSelect.setAttribute('id', 'secondLang');\n  secondSelect.className = 'chooseLanguages';\n  const firstLang = sessionStorage.getItem('firstLang') || 'US';\n  const secondLang = sessionStorage.getItem('secondLang') || 'Russian';\n\n  for (let i = 0, len = languages.length; i < len; i += 1) {\n    let option = document.createElement('option');\n    option.textContent = languages[i];\n    if (languages[i] === firstLang) option.selected = true;\n    firstSelect.append(option);\n    option = document.createElement('option');\n    option.textContent = languages[i];\n    if (languages[i] === secondLang) option.selected = true;\n    secondSelect.append(option);\n  }\n\n  let label = document.createElement('label');\n  label.textContent = 'Choose first language';\n  wrapper.append(label);\n  wrapper.append(firstSelect);\n  label = document.createElement('label');\n  label.textContent = 'Choose second language';\n  const info = document.createElement('p');\n  info.className = 'info';\n  info.innerHTML = 'OS: Window 10. Change language: Ctrl + Alt. Can use: Ctrl + A, Ctrl + C, Ctrl + V.';\n  wrapper.append(label);\n  wrapper.append(secondSelect);\n  wrapper.append(info);\n  document.body.append(wrapper);\n}\n\nwindow.addEventListener('load', () => {\n  const keyboard = new _controller_keyboard__WEBPACK_IMPORTED_MODULE_2__[\"default\"](_model_buttons__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n  keyboard.create('body');\n  const languages = Object.keys(_model_languages__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n  chooseLanguages(languages);\n  document.getElementById('firstLang').addEventListener('change', () => {\n    const lang = document.getElementById('firstLang').value;\n    keyboard.changeLanguages('firstLang', _model_languages__WEBPACK_IMPORTED_MODULE_1__[\"default\"][lang]);\n    sessionStorage.setItem('firstLang', lang);\n  }, false);\n  document.getElementById('secondLang').addEventListener('change', () => {\n    const lang = document.getElementById('secondLang').value;\n    keyboard.changeLanguages('secondLang', _model_languages__WEBPACK_IMPORTED_MODULE_1__[\"default\"][lang]);\n    sessionStorage.setItem('secondLang', lang);\n  }, false);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaW5kZXguanM/YjYzNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYnV0dG9ucyBmcm9tICcuL21vZGVsL2J1dHRvbnMnO1xyXG5pbXBvcnQgbGFuZ3VhZ2VzTGlzdCBmcm9tICcuL21vZGVsL2xhbmd1YWdlcyc7XHJcbmltcG9ydCBLZXlib2FyZCBmcm9tICcuL2NvbnRyb2xsZXIva2V5Ym9hcmQnO1xyXG5cclxuZnVuY3Rpb24gY2hvb3NlTGFuZ3VhZ2VzKGxhbmd1YWdlcykge1xyXG4gICAgY29uc3Qgd3JhcHBlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgd3JhcHBlci5jbGFzc05hbWUgPSAnd3JhcHBlckxhbmd1YWdlcyc7XHJcbiAgICBjb25zdCBmaXJzdFNlbGVjdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NlbGVjdCcpO1xyXG4gICAgZmlyc3RTZWxlY3Quc2V0QXR0cmlidXRlKCdpZCcsICdmaXJzdExhbmcnKTtcclxuICAgIGZpcnN0U2VsZWN0LmNsYXNzTmFtZSA9ICdjaG9vc2VMYW5ndWFnZXMnO1xyXG5cclxuICAgIGNvbnN0IHNlY29uZFNlbGVjdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NlbGVjdCcpO1xyXG4gICAgc2Vjb25kU2VsZWN0LnNldEF0dHJpYnV0ZSgnaWQnLCAnc2Vjb25kTGFuZycpO1xyXG4gICAgc2Vjb25kU2VsZWN0LmNsYXNzTmFtZSA9ICdjaG9vc2VMYW5ndWFnZXMnO1xyXG5cclxuICAgIGNvbnN0IGZpcnN0TGFuZyA9IHNlc3Npb25TdG9yYWdlLmdldEl0ZW0oJ2ZpcnN0TGFuZycpIHx8ICdVUyc7XHJcbiAgICBjb25zdCBzZWNvbmRMYW5nID0gc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgnc2Vjb25kTGFuZycpIHx8ICdSdXNzaWFuJztcclxuXHJcbiAgICBmb3IgKGxldCBpID0gMCwgbGVuID0gbGFuZ3VhZ2VzLmxlbmd0aDsgaSA8IGxlbjsgaSArPSAxKSB7XHJcbiAgICAgICAgbGV0IG9wdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ29wdGlvbicpO1xyXG4gICAgICAgIG9wdGlvbi50ZXh0Q29udGVudCA9IGxhbmd1YWdlc1tpXTtcclxuICAgICAgICBpZiAobGFuZ3VhZ2VzW2ldID09PSBmaXJzdExhbmcpIG9wdGlvbi5zZWxlY3RlZCA9IHRydWU7XHJcbiAgICAgICAgZmlyc3RTZWxlY3QuYXBwZW5kKG9wdGlvbik7XHJcblxyXG4gICAgICAgIG9wdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ29wdGlvbicpO1xyXG4gICAgICAgIG9wdGlvbi50ZXh0Q29udGVudCA9IGxhbmd1YWdlc1tpXTtcclxuICAgICAgICBpZiAobGFuZ3VhZ2VzW2ldID09PSBzZWNvbmRMYW5nKSBvcHRpb24uc2VsZWN0ZWQgPSB0cnVlO1xyXG4gICAgICAgIHNlY29uZFNlbGVjdC5hcHBlbmQob3B0aW9uKTtcclxuICAgIH1cclxuXHJcbiAgICBsZXQgbGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsYWJlbCcpO1xyXG4gICAgbGFiZWwudGV4dENvbnRlbnQgPSAnQ2hvb3NlIGZpcnN0IGxhbmd1YWdlJztcclxuICAgIHdyYXBwZXIuYXBwZW5kKGxhYmVsKTtcclxuICAgIHdyYXBwZXIuYXBwZW5kKGZpcnN0U2VsZWN0KTtcclxuXHJcbiAgICBsYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xhYmVsJyk7XHJcbiAgICBsYWJlbC50ZXh0Q29udGVudCA9ICdDaG9vc2Ugc2Vjb25kIGxhbmd1YWdlJztcclxuXHJcbiAgICBjb25zdCBpbmZvID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpO1xyXG4gICAgaW5mby5jbGFzc05hbWUgPSAnaW5mbyc7XHJcbiAgICBpbmZvLmlubmVySFRNTCA9ICdPUzogV2luZG93IDEwLiBDaGFuZ2UgbGFuZ3VhZ2U6IEN0cmwgKyBBbHQuIENhbiB1c2U6IEN0cmwgKyBBLCBDdHJsICsgQywgQ3RybCArIFYuJztcclxuXHJcbiAgICB3cmFwcGVyLmFwcGVuZChsYWJlbCk7XHJcbiAgICB3cmFwcGVyLmFwcGVuZChzZWNvbmRTZWxlY3QpO1xyXG4gICAgd3JhcHBlci5hcHBlbmQoaW5mbyk7XHJcbiAgICBkb2N1bWVudC5ib2R5LmFwcGVuZCh3cmFwcGVyKTtcclxufVxyXG5cclxud2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2xvYWQnLCAoKSA9PiB7XHJcbiAgICBjb25zdCBrZXlib2FyZCA9IG5ldyBLZXlib2FyZChidXR0b25zKTtcclxuICAgIGtleWJvYXJkLmNyZWF0ZSgnYm9keScpO1xyXG4gICAgY29uc3QgbGFuZ3VhZ2VzID0gT2JqZWN0LmtleXMobGFuZ3VhZ2VzTGlzdCk7XHJcbiAgICBjaG9vc2VMYW5ndWFnZXMobGFuZ3VhZ2VzKTtcclxuXHJcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZmlyc3RMYW5nJykuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgKCkgPT4ge1xyXG4gICAgICAgIGNvbnN0IGxhbmcgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZmlyc3RMYW5nJykudmFsdWU7XHJcbiAgICAgICAga2V5Ym9hcmQuY2hhbmdlTGFuZ3VhZ2VzKCdmaXJzdExhbmcnLCBsYW5ndWFnZXNMaXN0W2xhbmddKTtcclxuICAgICAgICBzZXNzaW9uU3RvcmFnZS5zZXRJdGVtKCdmaXJzdExhbmcnLCBsYW5nKTtcclxuICAgIH0sIGZhbHNlKTtcclxuXHJcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc2Vjb25kTGFuZycpLmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsICgpID0+IHtcclxuICAgICAgICBjb25zdCBsYW5nID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3NlY29uZExhbmcnKS52YWx1ZTtcclxuICAgICAgICBrZXlib2FyZC5jaGFuZ2VMYW5ndWFnZXMoJ3NlY29uZExhbmcnLCBsYW5ndWFnZXNMaXN0W2xhbmddKTtcclxuICAgICAgICBzZXNzaW9uU3RvcmFnZS5zZXRJdGVtKCdzZWNvbmRMYW5nJywgbGFuZyk7XHJcbiAgICB9LCBmYWxzZSk7XHJcbn0pO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/model/buttons.js":
/*!******************************!*\
  !*** ./src/model/buttons.js ***!
  \******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nconst buttons = {\n  // #region Row №1.\n  backquote: {\n    service: false,\n    current: '`',\n    firstLang: {\n      signDef: '`',\n      signCaps: '`',\n      signShift: '~',\n      signShiftCaps: '~'\n    },\n    secondLang: {\n      signDef: 'ё',\n      signCaps: 'Ё',\n      signShift: 'Ё',\n      signShiftCaps: 'ё'\n    }\n  },\n  digit1: {\n    service: false,\n    current: '1',\n    firstLang: {\n      signDef: '1',\n      signCaps: '1',\n      signShift: '!',\n      signShiftCaps: '!'\n    },\n    secondLang: {\n      signDef: '1',\n      signCaps: '1',\n      signShift: '!',\n      signShiftCaps: '!'\n    }\n  },\n  digit2: {\n    service: false,\n    current: '2',\n    firstLang: {\n      signDef: '2',\n      signCaps: '2',\n      signShift: '@',\n      signShiftCaps: '@'\n    },\n    secondLang: {\n      signDef: '2',\n      signCaps: '2',\n      signShift: '&quot;',\n      signShiftCaps: '&quot;'\n    }\n  },\n  digit3: {\n    service: false,\n    current: '3',\n    firstLang: {\n      signDef: '3',\n      signCaps: '3',\n      signShift: '#',\n      signShiftCaps: '#'\n    },\n    secondLang: {\n      signDef: '3',\n      signCaps: '3',\n      signShift: '№',\n      signShiftCaps: '№'\n    }\n  },\n  digit4: {\n    service: false,\n    current: '4',\n    firstLang: {\n      signDef: '4',\n      signCaps: '4',\n      signShift: '$',\n      signShiftCaps: '$'\n    },\n    secondLang: {\n      signDef: '4',\n      signCaps: '4',\n      signShift: ';',\n      signShiftCaps: ';'\n    }\n  },\n  digit5: {\n    service: false,\n    current: '5',\n    firstLang: {\n      signDef: '5',\n      signCaps: '5',\n      signShift: '%',\n      signShiftCaps: '%'\n    },\n    secondLang: {\n      signDef: '5',\n      signCaps: '5',\n      signShift: '%',\n      signShiftCaps: '%'\n    }\n  },\n  digit6: {\n    service: false,\n    current: '6',\n    firstLang: {\n      signDef: '6',\n      signCaps: '6',\n      signShift: '^',\n      signShiftCaps: '^'\n    },\n    secondLang: {\n      signDef: '6',\n      signCaps: '6',\n      signShift: ':',\n      signShiftCaps: ':'\n    }\n  },\n  digit7: {\n    service: false,\n    current: '7',\n    firstLang: {\n      signDef: '7',\n      signCaps: '7',\n      signShift: '&',\n      signShiftCaps: '&'\n    },\n    secondLang: {\n      signDef: '7',\n      signCaps: '7',\n      signShift: '?',\n      signShiftCaps: '?'\n    }\n  },\n  digit8: {\n    service: false,\n    current: '8',\n    firstLang: {\n      signDef: '8',\n      signCaps: '8',\n      signShift: '*',\n      signShiftCaps: '*'\n    },\n    secondLang: {\n      signDef: '8',\n      signCaps: '8',\n      signShift: '*',\n      signShiftCaps: '*'\n    }\n  },\n  digit9: {\n    service: false,\n    current: '9',\n    firstLang: {\n      signDef: '9',\n      signCaps: '9',\n      signShift: '(',\n      signShiftCaps: '('\n    },\n    secondLang: {\n      signDef: '9',\n      signCaps: '9',\n      signShift: '(',\n      signShiftCaps: '('\n    }\n  },\n  digit0: {\n    service: false,\n    current: '0',\n    firstLang: {\n      signDef: '0',\n      signCaps: '0',\n      signShift: ')',\n      signShiftCaps: ')'\n    },\n    secondLang: {\n      signDef: '0',\n      signCaps: '0',\n      signShift: ')',\n      signShiftCaps: ')'\n    }\n  },\n  minus: {\n    service: false,\n    current: '-',\n    firstLang: {\n      signDef: '-',\n      signCaps: '-',\n      signShift: '_',\n      signShiftCaps: '_'\n    },\n    secondLang: {\n      signDef: '-',\n      signCaps: '-',\n      signShift: '_',\n      signShiftCaps: '_'\n    }\n  },\n  equal: {\n    service: false,\n    current: '=',\n    firstLang: {\n      signDef: '=',\n      signCaps: '=',\n      signShift: '+',\n      signShiftCaps: '+'\n    },\n    secondLang: {\n      signDef: '=',\n      signCaps: '=',\n      signShift: '+',\n      signShiftCaps: '+'\n    }\n  },\n  backspace: {\n    service: true,\n    current: 'BackSpace'\n  },\n  // #endregion\n  // #region Row №2.\n  tab: {\n    service: true,\n    current: 'Tab',\n    write: '    '\n  },\n  keyQ: {\n    title: 'KeyQ',\n    value: 81,\n    service: false,\n    current: 'q',\n    firstLang: {\n      signDef: 'q',\n      signCaps: 'Q',\n      signShift: 'Q',\n      signShiftCaps: 'q'\n    },\n    secondLang: {\n      signDef: 'й',\n      signCaps: 'Й',\n      signShift: 'Й',\n      signShiftCaps: 'й'\n    }\n  },\n  keyW: {\n    service: false,\n    current: 'w',\n    firstLang: {\n      signDef: 'w',\n      signCaps: 'W',\n      signShift: 'W',\n      signShiftCaps: 'w'\n    },\n    secondLang: {\n      signDef: 'ц',\n      signCaps: 'Ц',\n      signShift: 'Ц',\n      signShiftCaps: 'ц'\n    }\n  },\n  keyE: {\n    service: false,\n    current: 'e',\n    firstLang: {\n      signDef: 'e',\n      signCaps: 'E',\n      signShift: 'E',\n      signShiftCaps: 'e'\n    },\n    secondLang: {\n      signDef: 'у',\n      signCaps: 'У',\n      signShift: 'У',\n      signShiftCaps: 'у'\n    }\n  },\n  keyR: {\n    service: false,\n    current: 'r',\n    firstLang: {\n      signDef: 'r',\n      signCaps: 'R',\n      signShift: 'R',\n      signShiftCaps: 'r'\n    },\n    secondLang: {\n      signDef: 'к',\n      signCaps: 'К',\n      signShift: 'К',\n      signShiftCaps: 'к'\n    }\n  },\n  keyT: {\n    service: false,\n    current: 't',\n    firstLang: {\n      signDef: 't',\n      signCaps: 'T',\n      signShift: 'T',\n      signShiftCaps: 't'\n    },\n    secondLang: {\n      signDef: 'е',\n      signCaps: 'Е',\n      signShift: 'Е',\n      signShiftCaps: 'е'\n    }\n  },\n  keyY: {\n    service: false,\n    current: 'y',\n    firstLang: {\n      signDef: 'y',\n      signCaps: 'Y',\n      signShift: 'Y',\n      signShiftCaps: 'y'\n    },\n    secondLang: {\n      signDef: 'н',\n      signCaps: 'Н',\n      signShift: 'Н',\n      signShiftCaps: 'н'\n    }\n  },\n  keyU: {\n    service: false,\n    current: 'u',\n    firstLang: {\n      signDef: 'u',\n      signCaps: 'U',\n      signShift: 'U',\n      signShiftCaps: 'u'\n    },\n    secondLang: {\n      signDef: 'г',\n      signCaps: 'Г',\n      signShift: 'Г',\n      signShiftCaps: 'г'\n    }\n  },\n  keyI: {\n    service: false,\n    current: 'i',\n    firstLang: {\n      signDef: 'i',\n      signCaps: 'I',\n      signShift: 'I',\n      signShiftCaps: 'i'\n    },\n    secondLang: {\n      signDef: 'ш',\n      signCaps: 'Ш',\n      signShift: 'Ш',\n      signShiftCaps: 'ш'\n    }\n  },\n  keyO: {\n    service: false,\n    current: 'o',\n    firstLang: {\n      signDef: 'o',\n      signCaps: 'O',\n      signShift: 'O',\n      signShiftCaps: 'o'\n    },\n    secondLang: {\n      signDef: 'щ',\n      signCaps: 'Щ',\n      signShift: 'Щ',\n      signShiftCaps: 'щ'\n    }\n  },\n  keyP: {\n    service: false,\n    current: 'p',\n    firstLang: {\n      signDef: 'p',\n      signCaps: 'P',\n      signShift: 'P',\n      signShiftCaps: 'p'\n    },\n    secondLang: {\n      signDef: 'з',\n      signCaps: 'З',\n      signShift: 'З',\n      signShiftCaps: 'з'\n    }\n  },\n  bracketLeft: {\n    service: false,\n    current: '[',\n    firstLang: {\n      signDef: '[',\n      signCaps: '[',\n      signShift: '{',\n      signShiftCaps: '{'\n    },\n    secondLang: {\n      signDef: 'х',\n      signCaps: 'Х',\n      signShift: 'Х',\n      signShiftCaps: 'х'\n    }\n  },\n  bracketRight: {\n    service: false,\n    current: ']',\n    firstLang: {\n      signDef: ']',\n      signCaps: ']',\n      signShift: '}',\n      signShiftCaps: '}'\n    },\n    secondLang: {\n      signDef: 'ъ',\n      signCaps: 'Ъ',\n      signShift: 'Ъ',\n      signShiftCaps: 'ъ'\n    }\n  },\n  backslash: {\n    service: false,\n    current: '\\\\',\n    firstLang: {\n      signDef: '\\\\',\n      signCaps: '\\\\',\n      signShift: '|',\n      signShiftCaps: '|'\n    },\n    secondLang: {\n      signDef: '\\\\',\n      signCaps: '\\\\',\n      signShift: '/',\n      signShiftCaps: '/'\n    }\n  },\n  // #endregion\n  // #region Row №3.\n  capsLock: {\n    service: true,\n    current: 'CapsLock',\n    down: false\n  },\n  keyA: {\n    service: false,\n    current: 'a',\n    firstLang: {\n      signDef: 'a',\n      signCaps: 'A',\n      signShift: 'A',\n      signShiftCaps: 'a'\n    },\n    secondLang: {\n      signDef: 'ф',\n      signCaps: 'Ф',\n      signShift: 'Ф',\n      signShiftCaps: 'ф'\n    }\n  },\n  keyS: {\n    service: false,\n    current: 's',\n    firstLang: {\n      signDef: 's',\n      signCaps: 'S',\n      signShift: 'S',\n      signShiftCaps: 's'\n    },\n    secondLang: {\n      signDef: 'ы',\n      signCaps: 'Ы',\n      signShift: 'Ы',\n      signShiftCaps: 'ы'\n    }\n  },\n  keyD: {\n    service: false,\n    current: 'd',\n    firstLang: {\n      signDef: 'd',\n      signCaps: 'D',\n      signShift: 'D',\n      signShiftCaps: 'd'\n    },\n    secondLang: {\n      signDef: 'в',\n      signCaps: 'В',\n      signShift: 'В',\n      signShiftCaps: 'в'\n    }\n  },\n  keyF: {\n    service: false,\n    current: 'f',\n    firstLang: {\n      signDef: 'f',\n      signCaps: 'F',\n      signShift: 'F',\n      signShiftCaps: 'f'\n    },\n    secondLang: {\n      signDef: 'а',\n      signCaps: 'А',\n      signShift: 'А',\n      signShiftCaps: 'а'\n    }\n  },\n  keyG: {\n    service: false,\n    current: 'g',\n    firstLang: {\n      signDef: 'g',\n      signCaps: 'G',\n      signShift: 'G',\n      signShiftCaps: 'g'\n    },\n    secondLang: {\n      signDef: 'п',\n      signCaps: 'П',\n      signShift: 'П',\n      signShiftCaps: 'п'\n    }\n  },\n  keyH: {\n    service: false,\n    current: 'h',\n    firstLang: {\n      signDef: 'h',\n      signCaps: 'H',\n      signShift: 'H',\n      signShiftCaps: 'h'\n    },\n    secondLang: {\n      signDef: 'р',\n      signCaps: 'Р',\n      signShift: 'Р',\n      signShiftCaps: 'р'\n    }\n  },\n  keyJ: {\n    service: false,\n    current: 'j',\n    firstLang: {\n      signDef: 'j',\n      signCaps: 'J',\n      signShift: 'J',\n      signShiftCaps: 'j'\n    },\n    secondLang: {\n      signDef: 'о',\n      signCaps: 'О',\n      signShift: 'О',\n      signShiftCaps: 'о'\n    }\n  },\n  keyK: {\n    service: false,\n    current: 'k',\n    firstLang: {\n      signDef: 'k',\n      signCaps: 'K',\n      signShift: 'K',\n      signShiftCaps: 'k'\n    },\n    secondLang: {\n      signDef: 'л',\n      signCaps: 'Л',\n      signShift: 'Л',\n      signShiftCaps: 'л'\n    }\n  },\n  keyL: {\n    service: false,\n    current: 'l',\n    firstLang: {\n      signDef: 'l',\n      signCaps: 'L',\n      signShift: 'L',\n      signShiftCaps: 'l'\n    },\n    secondLang: {\n      signDef: 'д',\n      signCaps: 'Д',\n      signShift: 'Д',\n      signShiftCaps: 'д'\n    }\n  },\n  semicolon: {\n    service: false,\n    current: ';',\n    firstLang: {\n      signDef: ';',\n      signCaps: ';',\n      signShift: ':',\n      signShiftCaps: ':'\n    },\n    secondLang: {\n      signDef: 'ж',\n      signCaps: 'Ж',\n      signShift: 'Ж',\n      signShiftCaps: 'ж'\n    }\n  },\n  quote: {\n    service: false,\n    current: \"'\",\n    firstLang: {\n      signDef: \"'\",\n      signCaps: \"'\",\n      signShift: '&quot;',\n      signShiftCaps: '&quot;'\n    },\n    secondLang: {\n      signDef: 'э',\n      signCaps: 'Э',\n      signShift: 'Э',\n      signShiftCaps: 'э'\n    }\n  },\n  enter: {\n    service: true,\n    current: 'Enter',\n    write: '\\n'\n  },\n  // #endregion\n  // #region Row №4.\n  shiftLeft: {\n    service: true,\n    current: 'Shift'\n  },\n  keyZ: {\n    service: false,\n    current: 'z',\n    firstLang: {\n      signDef: 'z',\n      signCaps: 'Z',\n      signShift: 'Z',\n      signShiftCaps: 'z'\n    },\n    secondLang: {\n      signDef: 'я',\n      signCaps: 'Я',\n      signShift: 'Я',\n      signShiftCaps: 'я'\n    }\n  },\n  keyX: {\n    service: false,\n    current: 'x',\n    firstLang: {\n      signDef: 'x',\n      signCaps: 'X',\n      signShift: 'X',\n      signShiftCaps: 'x'\n    },\n    secondLang: {\n      signDef: 'ч',\n      signCaps: 'Ч',\n      signShift: 'Ч',\n      signShiftCaps: 'ч'\n    }\n  },\n  keyC: {\n    service: false,\n    current: 'c',\n    firstLang: {\n      signDef: 'c',\n      signCaps: 'C',\n      signShift: 'C',\n      signShiftCaps: 'c'\n    },\n    secondLang: {\n      signDef: 'с',\n      signCaps: 'С',\n      signShift: 'С',\n      signShiftCaps: 'с'\n    }\n  },\n  keyV: {\n    service: false,\n    current: 'v',\n    firstLang: {\n      signDef: 'v',\n      signCaps: 'V',\n      signShift: 'V',\n      signShiftCaps: 'v'\n    },\n    secondLang: {\n      signDef: 'м',\n      signCaps: 'М',\n      signShift: 'М',\n      signShiftCaps: 'м'\n    }\n  },\n  keyB: {\n    service: false,\n    current: 'b',\n    firstLang: {\n      signDef: 'b',\n      signCaps: 'B',\n      signShift: 'B',\n      signShiftCaps: 'b'\n    },\n    secondLang: {\n      signDef: 'и',\n      signCaps: 'И',\n      signShift: 'И',\n      signShiftCaps: 'и'\n    }\n  },\n  keyN: {\n    service: false,\n    current: 'n',\n    firstLang: {\n      signDef: 'n',\n      signCaps: 'N',\n      signShift: 'N',\n      signShiftCaps: 'n'\n    },\n    secondLang: {\n      signDef: 'т',\n      signCaps: 'Т',\n      signShift: 'Т',\n      signShiftCaps: 'т'\n    }\n  },\n  keyM: {\n    service: false,\n    current: 'm',\n    firstLang: {\n      signDef: 'm',\n      signCaps: 'M',\n      signShift: 'M',\n      signShiftCaps: 'm'\n    },\n    secondLang: {\n      signDef: 'ь',\n      signCaps: 'Ь',\n      signShift: 'Ь',\n      signShiftCaps: 'ь'\n    }\n  },\n  comma: {\n    service: false,\n    current: ',',\n    firstLang: {\n      signDef: ',',\n      signCaps: ',',\n      signShift: '<',\n      signShiftCaps: '<'\n    },\n    secondLang: {\n      signDef: 'б',\n      signCaps: 'Б',\n      signShift: 'Б',\n      signShiftCaps: 'б'\n    }\n  },\n  period: {\n    service: false,\n    current: '.',\n    firstLang: {\n      signDef: '.',\n      signCaps: '.',\n      signShift: '>',\n      signShiftCaps: '>'\n    },\n    secondLang: {\n      signDef: 'ю',\n      signCaps: 'Ю',\n      signShift: 'Ю',\n      signShiftCaps: 'ю'\n    }\n  },\n  slash: {\n    service: false,\n    current: '/',\n    firstLang: {\n      signDef: '/',\n      signCaps: '/',\n      signShift: '?',\n      signShiftCaps: '?'\n    },\n    secondLang: {\n      signDef: '.',\n      signCaps: '.',\n      signShift: ',',\n      signShiftCaps: ','\n    }\n  },\n  arrowUp: {\n    service: true,\n    obj: undefined,\n    current: '&uarr;'\n  },\n  shiftRight: {\n    service: true,\n    current: 'Shift'\n  },\n  // #endregion\n  // #region Row №5.\n  controlLeft: {\n    service: true,\n    current: 'Ctrl'\n  },\n  altLeft: {\n    service: true,\n    current: 'Alt'\n  },\n  space: {\n    service: true,\n    current: 'Space',\n    write: ' '\n  },\n  altRight: {\n    service: true,\n    current: 'Alt'\n  },\n  controlRight: {\n    service: true,\n    current: 'Ctrl'\n  },\n  arrowLeft: {\n    service: true,\n    obj: undefined,\n    current: '&larr;'\n  },\n  arrowDown: {\n    service: true,\n    obj: undefined,\n    current: '&darr;'\n  },\n  arrowRight: {\n    service: true,\n    obj: undefined,\n    current: '&rarr;'\n  },\n  delete: {\n    service: true,\n    current: 'Del'\n  } // #endregion\n\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (buttons);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/model/buttons.js\n");

/***/ }),

/***/ "./src/model/languages.js":
/*!********************************!*\
  !*** ./src/model/languages.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nconst languagesList = {\n  Belarusian: [// Belarusian Standard Keyboard\n  ['\\u0451', '\\u0401'], ['1', '!'], ['2', '\"'], ['3', '\\u2116'], ['4', ';'], ['5', '%'], ['6', ':'], ['7', '?'], ['8', '*'], ['9', '('], ['0', ')'], ['-', '_'], ['=', '+'], ['BackSpace', 'BackSpace'], ['Tab', 'Tab'], ['\\u0439', '\\u0419'], ['\\u0446', '\\u0426'], ['\\u0443', '\\u0423'], ['\\u043a', '\\u041a'], ['\\u0435', '\\u0415'], ['\\u043d', '\\u041d'], ['\\u0433', '\\u0413'], ['\\u0448', '\\u0428'], ['\\u045e', '\\u040e'], ['\\u0437', '\\u0417'], ['\\u0445', '\\u0425'], [\"'\", \"'\"], ['\\\\', '/', '|'], ['CapsLock', 'CapsLock'], ['\\u0444', '\\u0424'], ['\\u044b', '\\u042b'], ['\\u0432', '\\u0412'], ['\\u0430', '\\u0410'], ['\\u043f', '\\u041f'], ['\\u0440', '\\u0420'], ['\\u043e', '\\u041e'], ['\\u043b', '\\u041b'], ['\\u0434', '\\u0414'], ['\\u0436', '\\u0416'], ['\\u044d', '\\u042d'], ['Enter', 'Enter'], ['Shift', 'Shift'], ['\\u044f', '\\u042f'], ['\\u0447', '\\u0427'], ['\\u0441', '\\u0421'], ['\\u043c', '\\u041c'], ['\\u0456', '\\u0406'], ['\\u0442', '\\u0422'], ['\\u044c', '\\u042c'], ['\\u0431', '\\u0411'], ['\\u044e', '\\u042e'], ['.', ','], [''], ['Shift', 'Shift']],\n  Belgian: [// Belgian Standard Keyboard\n  ['\\u00b2', '\\u00b3'], ['1', '&', '|'], ['2', '\\u00e9', '@'], ['3', '\"', '#'], ['4', \"'\"], ['5', '('], ['6', '\\u00a7', '^'], ['7', '\\u00e8'], ['8', '!'], ['9', '\\u00e7', '{'], ['0', '\\u00e0', '}'], [')', '\\u00b0'], ['-', '_'], ['BackSpace', 'BackSpace'], ['Tab', 'Tab'], ['a', 'A'], ['z', 'Z'], ['e', 'E', '\\u20ac'], ['r', 'R'], ['t', 'T'], ['y', 'Y'], ['u', 'U'], ['i', 'I'], ['o', 'O'], ['p', 'P'], ['\\u005e', '\\u00a8', '['], ['$', '*', ']'], ['\\u03bc', '\\u00a3', '`'], ['CapsLock', 'CapsLock'], ['q', 'Q'], ['s', 'S'], ['d', 'D'], ['f', 'F'], ['g', 'G'], ['h', 'H'], ['j', 'J'], ['k', 'K'], ['l', 'L'], ['m', 'M'], ['\\u00f9', '%', '\\u00b4'], ['Enter', 'Enter'], ['Shift', 'Shift'], ['w', 'W'], ['x', 'X'], ['c', 'C'], ['v', 'V'], ['b', 'B'], ['n', 'N'], [',', '?'], [';', '.'], [':', '/'], ['=', '+', '~'], [''], ['Shift', 'Shift']],\n  Czech: [// Czech Keyboard\n  [';', '\\u00b0', '`', '~'], ['1', '+', '!'], ['2', '\\u011B', '@'], ['3', '\\u0161', '#'], ['4', '\\u010D', '$'], ['5', '\\u0159', '%'], ['6', '\\u017E', '^'], ['7', '\\u00FD', '&'], ['8', '\\u00E1', '*'], ['9', '\\u00ED', '('], ['\\u00E9', '0', ')'], ['=', '%', '-', '_'], ['\\u00B4', '\\u02c7', '=', '+'], ['BackSpace', 'BackSpace'], ['Tab', 'Tab'], ['q', 'Q'], ['w', 'W'], ['e', 'E', '\\u20AC'], ['r', 'R'], ['t', 'T'], ['y', 'Y'], ['u', 'U'], ['i', 'I'], ['o', 'O'], ['p', 'P'], ['\\u00FA', '/', '[', '{'], [')', '(', ']', '}'], ['\\u00A8', \"'\", '\\\\', '|'], ['CapsLock', 'CapsLock'], ['a', 'A'], ['s', 'S'], ['d', 'D'], ['f', 'F'], ['g', 'G'], ['h', 'H'], ['j', 'J'], ['k', 'K'], ['l', 'L'], ['\\u016F', '\"', ';', ':'], ['\\u00A7', '!', '\\u00a4', '^'], ['Enter', 'Enter'], ['Shift', 'Shift'], ['z', 'Z'], ['x', 'X'], ['c', 'C'], ['v', 'V'], ['b', 'B'], ['n', 'N'], ['m', 'M'], [',', '?', '<', '\\u00d7'], ['.', ':', '>', '\\u00f7'], ['-', '_', '/', '?'], [''], ['Shift', 'Shift']],\n  Danish: [// Danish Standard Keyboard\n  ['\\u00bd', '\\u00a7'], ['1', '!'], ['2', '\"', '@'], ['3', '#', '\\u00a3'], ['4', '\\u00a4', '$'], ['5', '%', '\\u20ac'], ['6', '&'], ['7', '/', '{'], ['8', '(', '['], ['9', ')', ']'], ['0', '=', '}'], ['+', '?'], ['\\u00b4', '`', '|'], ['BackSpace', 'BackSpace'], ['Tab', 'Tab'], ['q', 'Q'], ['w', 'W'], ['e', 'E', '\\u20ac'], ['r', 'R'], ['t', 'T'], ['y', 'Y'], ['u', 'U'], ['i', 'I'], ['o', 'O'], ['p', 'P'], ['\\u00e5', '\\u00c5'], ['\\u00a8', '^', '~'], [\"'\", '*'], ['CapsLock', 'CapsLock'], ['a', 'A'], ['s', 'S'], ['d', 'D'], ['f', 'F'], ['g', 'G'], ['h', 'H'], ['j', 'J'], ['k', 'K'], ['l', 'L'], ['\\u00e6', '\\u00c6'], ['\\u00f8', '\\u00d8'], ['Enter', 'Enter'], ['Shift', 'Shift'], ['z', 'Z'], ['x', 'X'], ['c', 'C'], ['v', 'V'], ['b', 'B'], ['n', 'N'], ['m', 'M', '\\u03bc', '\\u039c'], [',', ';'], ['.', ':'], ['-', '_'], [''], ['Shift', 'Shift']],\n  Dutch: [// Dutch Standard Keyboard\n  ['@', '\\u00a7', '\\u00ac'], ['1', '!', '\\u00b9'], ['2', '\"', '\\u00b2'], ['3', '#', '\\u00b3'], ['4', '$', '\\u00bc'], ['5', '%', '\\u00bd'], ['6', '&', '\\u00be'], ['7', '_', '\\u00a3'], ['8', '(', '{'], ['9', ')', '}'], ['0', \"'\"], ['/', '?', '\\\\'], ['\\u00b0', '~', '\\u00b8'], ['BackSpace', 'BackSpace'], ['Tab', 'Tab'], ['q', 'Q'], ['w', 'W'], ['e', 'E', '\\u20ac'], ['r', 'R', '\\u00b6'], ['t', 'T'], ['y', 'Y'], ['u', 'U'], ['i', 'I'], ['o', 'O'], ['p', 'P'], ['\\u00a8', '^'], ['*', '|'], ['<', '>'], ['CapsLock', 'CapsLock'], ['a', 'A'], ['s', 'S', '\\u00df'], ['d', 'D'], ['f', 'F'], ['g', 'G'], ['h', 'H'], ['j', 'J'], ['k', 'K'], ['l', 'L'], ['+', '\\u00b1'], ['\\u00b4', '\\u0060'], ['Enter', 'Enter'], ['Shift', 'Shift'], ['z', 'Z', '\\u00ab'], ['x', 'X', '\\u00bb'], ['c', 'C', '\\u00a2'], ['v', 'V'], ['b', 'B'], ['n', 'N'], ['m', 'M', '\\u00b5'], [',', ';'], ['.', ':', '\\u00b7'], ['-', '='], [''], ['Shift', 'Shift']],\n  French: [// French Standard Keyboard\n  ['\\u00b2', '\\u00b3'], ['1', '&'], ['2', '\\u00e9', '~'], ['3', '\"', '#'], ['4', \"'\", '{'], ['5', '(', '['], ['6', '-', '|'], ['7', '\\u00e8', '\\u0060'], ['8', '_', '\\\\'], ['9', '\\u00e7', '\\u005e'], ['0', '\\u00e0', '\\u0040'], [')', '\\u00b0', ']'], ['=', '+', '}'], ['BackSpace', 'BackSpace'], ['Tab', 'Tab'], ['a', 'A'], ['z', 'Z'], ['e', 'E', '\\u20ac'], ['r', 'R'], ['t', 'T'], ['y', 'Y'], ['u', 'U'], ['i', 'I'], ['o', 'O'], ['p', 'P'], ['^', '\\u00a8'], ['$', '\\u00a3', '\\u00a4'], ['*', '\\u03bc'], ['CapsLock', 'CapsLock'], ['q', 'Q'], ['s', 'S'], ['d', 'D'], ['f', 'F'], ['g', 'G'], ['h', 'H'], ['j', 'J'], ['k', 'K'], ['l', 'L'], ['m', 'M'], ['\\u00f9', '%'], ['Enter', 'Enter'], ['Shift', 'Shift'], ['w', 'W'], ['x', 'X'], ['c', 'C'], ['v', 'V'], ['b', 'B'], ['n', 'N'], [',', '?'], [';', '.'], [':', '/'], ['!', '\\u00a7'], [''], ['Shift', 'Shift']],\n  German: [// German Standard Keyboard\n  ['\\u005e', '\\u00b0'], ['1', '!'], ['2', '\"', '\\u00b2'], ['3', '\\u00a7', '\\u00b3'], ['4', '$'], ['5', '%'], ['6', '&'], ['7', '/', '{'], ['8', '(', '['], ['9', ')', ']'], ['0', '=', '}'], ['\\u00df', '?', '\\\\'], ['\\u00b4', '\\u0060'], ['BackSpace', 'BackSpace'], ['Tab', 'Tab'], ['q', 'Q', '\\u0040'], ['w', 'W'], ['e', 'E', '\\u20ac'], ['r', 'R'], ['t', 'T'], ['z', 'Z'], ['u', 'U'], ['i', 'I'], ['o', 'O'], ['p', 'P'], ['\\u00fc', '\\u00dc'], ['+', '*', '~'], ['#', \"'\"], ['CapsLock', 'CapsLock'], ['a', 'A'], ['s', 'S'], ['d', 'D'], ['f', 'F'], ['g', 'G'], ['h', 'H'], ['j', 'J'], ['k', 'K'], ['l', 'L'], ['\\u00f6', '\\u00d6'], ['\\u00e4', '\\u00c4'], ['Enter', 'Enter'], ['Shift', 'Shift'], ['y', 'Y'], ['x', 'X'], ['c', 'C'], ['v', 'V'], ['b', 'B'], ['n', 'N'], ['m', 'M', '\\u00b5'], [',', ';'], ['.', ':'], ['-', '_'], [''], ['Shift', 'Shift']],\n  Greek: [// Greek Standard Keyboard\n  ['`', '~'], ['1', '!'], ['2', '@', '\\u00b2'], ['3', '#', '\\u00b3'], ['4', '$', '\\u00a3'], ['5', '%', '\\u00a7'], ['6', '^', '\\u00b6'], ['7', '&'], ['8', '*', '\\u00a4'], ['9', '(', '\\u00a6'], ['0', ')', '\\u00ba'], ['-', '_', '\\u00b1'], ['=', '+', '\\u00bd'], ['BackSpace', 'BackSpace'], ['Tab', 'Tab'], [';', ':'], ['\\u03c2', '^'], ['\\u03b5', '\\u0395'], ['\\u03c1', '\\u03a1'], ['\\u03c4', '\\u03a4'], ['\\u03c5', '\\u03a5'], ['\\u03b8', '\\u0398'], ['\\u03b9', '\\u0399'], ['\\u03bf', '\\u039f'], ['\\u03c0', '\\u03a0'], ['[', '{', '\\u201c'], [']', '}', '\\u201d'], ['\\\\', '|', '\\u00ac'], ['CapsLock', 'CapsLock'], ['\\u03b1', '\\u0391'], ['\\u03c3', '\\u03a3'], ['\\u03b4', '\\u0394'], ['\\u03c6', '\\u03a6'], ['\\u03b3', '\\u0393'], ['\\u03b7', '\\u0397'], ['\\u03be', '\\u039e'], ['\\u03ba', '\\u039a'], ['\\u03bb', '\\u039b'], ['\\u0384', '\\u00a8', '\\u0385'], [\"'\", '\"'], ['Enter', 'Enter'], ['Shift', 'Shift'], ['\\u03b6', '\\u0396'], ['\\u03c7', '\\u03a7'], ['\\u03c8', '\\u03a8'], ['\\u03c9', '\\u03a9'], ['\\u03b2', '\\u0392'], ['\\u03bd', '\\u039d'], ['\\u03bc', '\\u039c'], [',', '<'], ['.', '>'], ['/', '?'], [''], ['Shift', 'Shift']],\n  Hungarian: [// Hungarian Standard Keyboard\n  ['0', '\\u00a7'], ['1', \"'\", '\\u007e'], ['2', '\"', '\\u02c7'], ['3', '+', '\\u02c6'], ['4', '!', '\\u02d8'], ['5', '%', '\\u00b0'], ['6', '/', '\\u02db'], ['7', '=', '\\u0060'], ['8', '(', '\\u02d9'], ['9', ')', '\\u00b4'], ['\\u00f6', '\\u00d6', '\\u02dd'], ['\\u00fc', '\\u00dc', '\\u00a8'], ['\\u00f3', '\\u00d3', '\\u00b8'], ['BackSpace', 'BackSpace'], ['Tab', 'Tab'], ['q', 'Q', '\\u005c'], ['w', 'W', '\\u007c'], ['e', 'E', '\\u00c4'], ['r', 'R'], ['t', 'T'], ['z', 'Z'], ['u', 'U', '\\u20ac'], ['i', 'I', '\\u00cd'], ['o', 'O'], ['p', 'P'], ['\\u0151', '\\u0150', '\\u00f7'], ['\\u00fa', '\\u00da', '\\u00d7'], ['\\u0171', '\\u0170', '\\u00a4'], ['CapsLock', 'CapsLock'], ['a', 'A', '\\u00e4'], ['s', 'S', '\\u0111'], ['d', 'D', '\\u0110'], ['f', 'F', '\\u005b'], ['g', 'G', '\\u005d'], ['h', 'H'], ['j', 'J', '\\u00ed'], ['k', 'K', '\\u0141'], ['l', 'L', '\\u0142'], ['\\u00e9', '\\u00c9', '\\u0024'], ['\\u00e1', '\\u00c1', '\\u00df'], ['Enter', 'Enter'], ['Shift', 'Shift'], ['y', 'Y', '\\u003e'], ['x', 'X', '\\u0023'], ['c', 'C', '\\u0026'], ['v', 'V', '\\u0040'], ['b', 'B', '\\u007b'], ['n', 'N', '\\u007d'], ['m', 'M', '\\u003c'], [',', '?', '\\u003b'], ['.', ':', '\\u003e'], ['-', '_', '\\u002a'], [''], ['Shift', 'Shift']],\n  Italian: [// Italian Standard Keyboard\n  ['\\u005c', '\\u007c'], ['1', '!'], ['2', '\"'], ['3', '\\u00a3'], ['4', '$', '\\u20ac'], ['5', '%'], ['6', '&'], ['7', '/'], ['8', '('], ['9', ')'], ['0', '='], [\"'\", '?'], ['\\u00ec', '\\u005e'], ['BackSpace', 'BackSpace'], ['Tab', 'Tab'], ['q', 'Q'], ['w', 'W'], ['e', 'E', '\\u20ac'], ['r', 'R'], ['t', 'T'], ['y', 'Y'], ['u', 'U'], ['i', 'I'], ['o', 'O'], ['p', 'P'], ['\\u00e8', '\\u00e9', '[', '{'], ['+', '*', ']', '}'], ['\\u00f9', '\\u00a7'], ['CapsLock', 'CapsLock'], ['a', 'A'], ['s', 'S'], ['d', 'D'], ['f', 'F'], ['g', 'G'], ['h', 'H'], ['j', 'J'], ['k', 'K'], ['l', 'L'], ['\\u00f2', '\\u00e7', '@'], ['\\u00e0', '\\u00b0', '#'], ['Enter', 'Enter'], ['Shift', 'Shift'], ['z', 'Z'], ['x', 'X'], ['c', 'C'], ['v', 'V'], ['b', 'B'], ['n', 'N'], ['m', 'M'], [',', ';'], ['.', ':'], ['-', '_'], [''], ['Shift', 'Shift']],\n  Norwegian: [// Norwegian Standard Keyboard\n  ['|', '\\u00a7'], ['1', '!'], ['2', '\"', '@'], ['3', '#', '\\u00a3'], ['4', '\\u00a4', '$'], ['5', '%'], ['6', '&'], ['7', '/', '{'], ['8', '(', '['], ['9', ')', ']'], ['0', '=', '}'], ['+', '?'], ['\\\\', '`', '\\u00b4'], ['BackSpace', 'BackSpace'], ['Tab', 'Tab'], ['q', 'Q'], ['w', 'W'], ['e', 'E', '\\u20ac'], ['r', 'R'], ['t', 'T'], ['y', 'Y'], ['u', 'U'], ['i', 'I'], ['o', 'O'], ['p', 'P'], ['\\u00e5', '\\u00c5'], ['\\u00a8', '^', '~'], [\"'\", '*'], ['CapsLock', 'CapsLock'], ['a', 'A'], ['s', 'S'], ['d', 'D'], ['f', 'F'], ['g', 'G'], ['h', 'H'], ['j', 'J'], ['k', 'K'], ['l', 'L'], ['\\u00f8', '\\u00d8'], ['\\u00e6', '\\u00c6'], ['Enter', 'Enter'], ['Shift', 'Shift'], ['z', 'Z'], ['x', 'X'], ['c', 'C'], ['v', 'V'], ['b', 'B'], ['n', 'N'], ['m', 'M', '\\u03bc', '\\u039c'], [',', ';'], ['.', ':'], ['-', '_'], [''], ['Shift', 'Shift']],\n  Polish: [// Polish Programmers Keyboard\n  ['`', '~'], ['1', '!'], ['2', '@'], ['3', '#'], ['4', '$'], ['5', '%'], ['6', '^'], ['7', '&'], ['8', '*'], ['9', '('], ['0', ')'], ['-', '_'], ['=', '+'], ['BackSpace', 'BackSpace'], ['Tab', 'Tab'], ['q', 'Q'], ['w', 'W'], ['e', 'E', '\\u0119', '\\u0118'], ['r', 'R'], ['t', 'T'], ['y', 'Y'], ['u', 'U'], ['i', 'I'], ['o', 'O', '\\u00f3', '\\u00d3'], ['p', 'P'], ['[', '{'], [']', '}'], ['\\\\', '|'], ['CapsLock', 'CapsLock'], ['a', 'A', '\\u0105', '\\u0104'], ['s', 'S', '\\u015b', '\\u015a'], ['d', 'D'], ['f', 'F'], ['g', 'G'], ['h', 'H'], ['j', 'J'], ['k', 'K'], ['l', 'L', '\\u0142', '\\u0141'], [';', ':'], [\"'\", '\"'], ['Enter', 'Enter'], ['Shift', 'Shift'], ['z', 'Z', '\\u017c', '\\u017b'], ['x', 'X', '\\u017a', '\\u0179'], ['c', 'C', '\\u0107', '\\u0106'], ['v', 'V'], ['b', 'B'], ['n', 'N', '\\u0144', '\\u0143'], ['m', 'M'], [',', '<'], ['.', '>'], ['/', '?'], [''], ['Shift', 'Shift']],\n  PortugueseBr: [// Portuguese (Brazil) Standard Keyboard\n  [\"'\", '\"'], ['1', '!', '\\u00b9'], ['2', '@', '\\u00b2'], ['3', '#', '\\u00b3'], ['4', '$', '\\u00a3'], ['5', '%', '\\u00a2'], ['6', '\\u00a8', '\\u00ac'], ['7', '&'], ['8', '*'], ['9', '('], ['0', ')'], ['-', '_'], ['=', '+', '\\u00a7'], ['BackSpace', 'BackSpace'], ['Tab', 'Tab'], ['q', 'Q', '/'], ['w', 'W', '?'], ['e', 'E', '\\u20ac'], ['r', 'R'], ['t', 'T'], ['y', 'Y'], ['u', 'U'], ['i', 'I'], ['o', 'O'], ['p', 'P'], ['\\u00b4', '`'], ['[', '{', '\\u00aa'], ['/', '?', '\\\\', '|'], ['CapsLock', 'CapsLock'], ['a', 'A'], ['s', 'S'], ['d', 'D'], ['f', 'F'], ['g', 'G'], ['h', 'H'], ['j', 'J'], ['k', 'K'], ['l', 'L'], ['\\u00e7', '\\u00c7'], [']', '}', '\\u00ba', '~'], ['Enter', 'Enter'], ['Shift', 'Shift'], ['z', 'Z'], ['x', 'X'], ['c', 'C', '\\u20a2'], ['v', 'V'], ['b', 'B'], ['n', 'N'], ['m', 'M'], [',', '<'], ['.', '>'], [':', ':'], [''], ['Shift', 'Shift']],\n  PortuguesePt: [// Portuguese (Portugal) Standard Keyboard\n  ['\\\\', '|'], ['1', '!'], ['2', '\"', '@'], ['3', '#', '\\u00a3'], ['4', '$', '\\u00a7'], ['5', '%'], ['6', '&'], ['7', '/', '{'], ['8', '(', '['], ['9', ')', ']'], ['0', '=', '}'], [\"'\", '?'], ['\\u00ab', '\\u00bb'], ['BackSpace', 'BackSpace'], ['Tab', 'Tab'], ['q', 'Q'], ['w', 'W'], ['e', 'E', '\\u20ac'], ['r', 'R'], ['t', 'T'], ['y', 'Y'], ['u', 'U'], ['i', 'I'], ['o', 'O'], ['p', 'P'], ['+', '*', '\\u00a8'], ['\\u00b4', '`'], ['~', '^', '<', '>'], ['CapsLock', 'CapsLock'], ['a', 'A'], ['s', 'S'], ['d', 'D'], ['f', 'F'], ['g', 'G'], ['h', 'H'], ['j', 'J'], ['k', 'K'], ['l', 'L'], ['\\u00e7', '\\u00c7'], ['\\u00ba', '\\u00aa'], ['Enter', 'Enter'], ['Shift', 'Shift'], ['z', 'Z'], ['x', 'X'], ['c', 'C'], ['v', 'V'], ['b', 'B'], ['n', 'N'], ['m', 'M'], [',', ';'], ['.', ':'], ['-', '_'], [''], ['Shift', 'Shift']],\n  Russian: [// Russian Standard Keyboard\n  ['\\u0451', '\\u0401'], ['1', '!'], ['2', '\"'], ['3', '\\u2116'], ['4', ';'], ['5', '%'], ['6', ':'], ['7', '?'], ['8', '*'], ['9', '('], ['0', ')'], ['-', '_'], ['=', '+'], ['BackSpace', 'BackSpace'], ['Tab', 'Tab'], ['\\u0439', '\\u0419'], ['\\u0446', '\\u0426'], ['\\u0443', '\\u0423'], ['\\u043A', '\\u041A'], ['\\u0435', '\\u0415'], ['\\u043D', '\\u041D'], ['\\u0433', '\\u0413'], ['\\u0448', '\\u0428'], ['\\u0449', '\\u0429'], ['\\u0437', '\\u0417'], ['\\u0445', '\\u0425'], ['\\u044A', '\\u042A'], ['\\\\', '/', '|'], ['CapsLock', 'CapsLock'], ['\\u0444', '\\u0424'], ['\\u044B', '\\u042B'], ['\\u0432', '\\u0412'], ['\\u0430', '\\u0410'], ['\\u043F', '\\u041F'], ['\\u0440', '\\u0420'], ['\\u043E', '\\u041E'], ['\\u043B', '\\u041B'], ['\\u0434', '\\u0414'], ['\\u0436', '\\u0416'], ['\\u044D', '\\u042D'], ['Enter', 'Enter'], ['Shift', 'Shift'], ['\\u044F', '\\u042F'], ['\\u0447', '\\u0427'], ['\\u0441', '\\u0421'], ['\\u043C', '\\u041C'], ['\\u0438', '\\u0418'], ['\\u0442', '\\u0422'], ['\\u044C', '\\u042C'], ['\\u0431', '\\u0411'], ['\\u044E', '\\u042E'], ['.', ','], [''], ['Shift', 'Shift']],\n  SerbianCyr: [// Serbian Cyrillic Standard Keyboard\n  ['`', '~'], ['1', '!'], ['2', '\"'], ['3', '#'], ['4', '$'], ['5', '%'], ['6', '&'], ['7', '/'], ['8', '('], ['9', ')'], ['0', '='], [\"'\", '?'], ['+', '*'], ['BackSpace', 'BackSpace'], ['Tab', 'Tab'], ['\\u0459', '\\u0409'], ['\\u045a', '\\u040a'], ['\\u0435', '\\u0415', '\\u20ac'], ['\\u0440', '\\u0420'], ['\\u0442', '\\u0422'], ['\\u0437', '\\u0417'], ['\\u0443', '\\u0423'], ['\\u0438', '\\u0418'], ['\\u043e', '\\u041e'], ['\\u043f', '\\u041f'], ['\\u0448', '\\u0428'], ['\\u0452', '\\u0402'], ['\\u0436', '\\u0416', '<', '>'], ['CapsLock', 'CapsLock'], ['\\u0430', '\\u0410'], ['\\u0441', '\\u0421'], ['\\u0434', '\\u0414'], ['\\u0444', '\\u0424'], ['\\u0433', '\\u0413'], ['\\u0445', '\\u0425'], ['\\u0458', '\\u0408'], ['\\u043a', '\\u041a'], ['\\u043b', '\\u041b'], ['\\u0447', '\\u0427'], ['\\u045b', '\\u040b'], ['Enter', 'Enter'], ['Shift', 'Shift'], ['\\u0455', '\\u0405'], ['\\u045f', '\\u040f'], ['\\u0446', '\\u0426'], ['\\u0432', '\\u0412'], ['\\u0431', '\\u0411'], ['\\u043d', '\\u041d'], ['\\u043c', '\\u041c'], [',', ';', '<'], ['.', ':', '>'], ['-', '_', '\\u00a9'], [''], ['Shift', 'Shift']],\n  SerbianLat: [// Serbian Latin Standard Keyboard\n  ['\\u201a', '~'], ['1', '!', '~'], ['2', '\"', '\\u02c7'], ['3', '#', '^'], ['4', '$', '\\u02d8'], ['5', '%', '\\u00b0'], ['6', '&', '\\u02db'], ['7', '/', '`'], ['8', '(', '\\u02d9'], ['9', ')', '\\u00b4'], ['0', '=', '\\u02dd'], [\"'\", '?', '\\u00a8'], ['+', '*', '\\u00b8'], ['BackSpace', 'BackSpace'], ['Tab', 'Tab'], ['q', 'Q', '\\\\'], ['w', 'W', '|'], ['e', 'E', '\\u20ac'], ['r', 'R'], ['t', 'T'], ['z', 'Z'], ['u', 'U'], ['i', 'I'], ['o', 'O'], ['p', 'P'], ['\\u0161', '\\u0160', '\\u00f7'], ['\\u0111', '\\u0110', '\\u00d7'], ['\\u017e', '\\u017d', '\\u00a4'], ['CapsLock', 'CapsLock'], ['a', 'A'], ['s', 'S'], ['d', 'D'], ['f', 'F', '['], ['g', 'G', ']'], ['h', 'H'], ['j', 'J'], ['k', 'K', '\\u0142'], ['l', 'L', '\\u0141'], ['\\u010d', '\\u010c'], ['\\u0107', '\\u0106', '\\u00df'], ['Enter', 'Enter'], ['Shift', 'Shift'], ['y', 'Y'], ['x', 'X'], ['c', 'C'], ['v', 'V', '@'], ['b', 'B', '{'], ['n', 'N', '}'], ['m', 'M', '\\u00a7'], [',', ';', '<'], ['.', ':', '>'], ['-', '_', '\\u00a9'], [''], ['Shift', 'Shift']],\n  Slovak: [// Slovak Keyboard\n  [';', '\\u00b0'], ['+', '1', '~'], ['\\u013E', '2', '\\u02C7'], ['\\u0161', '3', '\\u005E'], ['\\u010D', '4', '\\u02D8'], ['\\u0165', '5', '\\u00B0'], ['\\u017E', '6', '\\u02DB'], ['\\u00FD', '7', '\\u0060'], ['\\u00E1', '8', '\\u02D9'], ['\\u00ED', '9', '\\u00B4'], ['\\u00E9', '0', '\\u02DD'], ['=', '%', '\\u00A8'], ['\\u00B4', '\\u02c7', '\\u00B8'], ['BackSpace', 'BackSpace'], ['Tab', 'Tab'], ['q', 'Q', '\\u005C'], ['w', 'W', '\\u007C'], ['e', 'E', '\\u20AC'], ['r', 'R'], ['t', 'T'], ['z', 'Z'], ['u', 'U'], ['i', 'I'], ['o', 'O'], ['p', 'P', '\\u0027'], ['\\u00FA', '/', '\\u00F7'], ['\\u00E4', '(', '\\u00D7'], ['\\u0148', ')', '\\u00A4'], ['CapsLock', 'CapsLock'], ['a', 'A'], ['s', 'S', '\\u0111'], ['d', 'D', '\\u0110'], ['f', 'F', '\\u005B'], ['g', 'G', '\\u005D'], ['h', 'H'], ['j', 'J'], ['k', 'K', '\\u0142'], ['l', 'L', '\\u0141'], ['\\u00F4', '\"', '\\u0024'], ['\\u00A7', '!', '\\u00DF'], ['Enter', 'Enter'], ['Shift', 'Shift'], ['y', 'Y', '\\u003E'], ['x', 'X', '\\u0023'], ['c', 'C', '\\u0026'], ['v', 'V', '\\u0040'], ['b', 'B', '\\u007B'], ['n', 'N', '\\u007D'], ['m', 'M'], [',', '?', '<'], ['.', ':', '>'], ['-', '_', '\\u002A'], [''], ['Shift', 'Shift']],\n  Slovenian: [// Slovenian Standard Keyboard\n  ['\\u00a8', '\\u00a8', '\\u00b8'], ['1', '!', '~'], ['2', '\"', '\\u02c7'], ['3', '#', '^'], ['4', '$', '\\u02d8'], ['5', '%', '\\u00b0'], ['6', '&', '\\u02db'], ['7', '/', '\\u0060'], ['8', '(', '\\u00B7'], ['9', ')', '\\u00b4'], ['0', '=', '\\u2033'], [\"'\", '?', '\\u00a8'], ['+', '*', '\\u00b8'], ['BackSpace', 'BackSpace'], ['Tab', 'Tab'], ['q', 'Q', '\\\\'], ['w', 'W', '|'], ['e', 'E', '\\u20ac'], ['r', 'R'], ['t', 'T'], ['z', 'Z'], ['u', 'U'], ['i', 'I'], ['o', 'O'], ['p', 'P'], ['\\u0161', '\\u0160', '\\u00f7'], ['\\u0111', '\\u0110', '\\u00d7'], ['\\u017E', '\\u017D', '\\u00a4'], ['CapsLock', 'CapsLock'], ['a', 'A'], ['s', 'S'], ['d', 'D'], ['f', 'F', '['], ['g', 'G', ']'], ['h', 'H'], ['j', 'J'], ['k', 'K', '\\u0142'], ['l', 'L', '\\u0141'], ['\\u010D', '\\u010C'], ['\\u0107', '\\u0106', '\\u00df'], ['Enter', 'Enter'], ['Shift', 'Shift'], ['y', 'Y'], ['x', 'X'], ['c', 'C'], ['v', 'V', '@'], ['b', 'B', '{'], ['n', 'N', '}'], ['m', 'M', '\\u00a7'], [',', ';'], ['.', ':'], ['-', '_'], [''], ['Shift', 'Shift']],\n  SpanishEs: [// Spanish (Spain) Standard Keyboard\n  ['\\u00ba', '\\u00aa', '\\\\'], ['1', '!', '|'], ['2', '\"', '@'], ['3', \"'\", '#'], ['4', '$', '~'], ['5', '%', '\\u20ac'], ['6', '&', '\\u00ac'], ['7', '/'], ['8', '('], ['9', ')'], ['0', '=', '>'], [\"'\", '?', '<'], ['\\u00a1', '\\u00bf'], ['BackSpace', 'BackSpace'], ['Tab', 'Tab'], ['q', 'Q'], ['w', 'W'], ['e', 'E'], ['r', 'R'], ['t', 'T'], ['y', 'Y'], ['u', 'U'], ['i', 'I'], ['o', 'O'], ['p', 'P'], ['\\u0060', '^', '['], ['\\u002b', '\\u002a', ']'], ['\\u00e7', '\\u00c7', '}'], ['CapsLock', 'CapsLock'], ['a', 'A'], ['s', 'S'], ['d', 'D'], ['f', 'F'], ['g', 'G'], ['h', 'H'], ['j', 'J'], ['k', 'K'], ['l', 'L'], ['\\u00f1', '\\u00d1'], ['\\u00b4', '\\u00a8', '{'], ['Enter', 'Enter'], ['Shift', 'Shift'], ['z', 'Z'], ['x', 'X'], ['c', 'C'], ['v', 'V'], ['b', 'B'], ['n', 'N'], ['m', 'M'], [',', ';'], ['.', ':'], ['-', '_'], [''], ['Shift', 'Shift']],\n  Swedish: [// Swedish Standard Keyboard\n  ['\\u00a7', '\\u00bd'], ['1', '!'], ['2', '\"', '@'], ['3', '#', '\\u00a3'], ['4', '\\u00a4', '$'], ['5', '%', '\\u20ac'], ['6', '&'], ['7', '/', '{'], ['8', '(', '['], ['9', ')', ']'], ['0', '=', '}'], ['+', '?', '\\\\'], ['\\u00b4', '`'], ['BackSpace', 'BackSpace'], ['Tab', 'Tab'], ['q', 'Q'], ['w', 'W'], ['e', 'E', '\\u20ac'], ['r', 'R'], ['t', 'T'], ['y', 'Y'], ['u', 'U'], ['i', 'I'], ['o', 'O'], ['p', 'P'], ['\\u00e5', '\\u00c5'], ['\\u00a8', '^', '~'], [\"'\", '*', '|'], ['CapsLock', 'CapsLock'], ['a', 'A'], ['s', 'S'], ['d', 'D'], ['f', 'F'], ['g', 'G'], ['h', 'H'], ['j', 'J'], ['k', 'K'], ['l', 'L'], ['\\u00f6', '\\u00d6'], ['\\u00e4', '\\u00c4'], ['Enter', 'Enter'], ['Shift', 'Shift'], ['z', 'Z'], ['x', 'X'], ['c', 'C'], ['v', 'V'], ['b', 'B'], ['n', 'N'], ['m', 'M', '\\u03bc', '\\u039c'], [',', ';'], ['.', ':'], ['-', '_'], [''], ['Shift', 'Shift']],\n  UK: [// UK Standard Keyboard\n  ['`', '\\u00ac', '\\u00a6'], ['1', '!'], ['2', '\"'], ['3', '\\u00a3'], ['4', '$', '\\u20ac'], ['5', '%'], ['6', '^'], ['7', '&'], ['8', '*'], ['9', '('], ['0', ')'], ['-', '_'], ['=', '+'], ['BackSpace', 'BackSpace'], ['Tab', 'Tab'], ['q', 'Q'], ['w', 'W'], ['e', 'E', '\\u00e9', '\\u00c9'], ['r', 'R'], ['t', 'T'], ['y', 'Y'], ['u', 'U', '\\u00fa', '\\u00da'], ['i', 'I', '\\u00ed', '\\u00cd'], ['o', 'O', '\\u00f3', '\\u00d3'], ['p', 'P'], ['[', '{'], [']', '}'], ['#', '~', '|'], ['CapsLock', 'CapsLock'], ['a', 'A', '\\u00e1', '\\u00c1'], ['s', 'S'], ['d', 'D'], ['f', 'F'], ['g', 'G'], ['h', 'H'], ['j', 'J'], ['k', 'K'], ['l', 'L'], [';', ':'], [\"'\", '@'], ['Enter', 'Enter'], ['Shift', 'Shift'], ['z', 'Z'], ['x', 'X'], ['c', 'C'], ['v', 'V'], ['b', 'B'], ['n', 'N'], ['m', 'M'], [',', '<'], ['.', '>'], ['/', '?'], [''], ['Shift', 'Shift']],\n  US: [// US Standard Keyboard\n  ['`', '~'], ['1', '!'], ['2', '@'], ['3', '#'], ['4', '$'], ['5', '%'], ['6', '^'], ['7', '&'], ['8', '*'], ['9', '('], ['0', ')'], ['-', '_'], ['=', '+'], ['BackSpace', 'BackSpace'], ['Tab', 'Tab'], ['q', 'Q'], ['w', 'W'], ['e', 'E'], ['r', 'R'], ['t', 'T'], ['y', 'Y'], ['u', 'U'], ['i', 'I'], ['o', 'O'], ['p', 'P'], ['[', '{'], [']', '}'], ['\\\\', '|'], ['CapsLock', 'CapsLock'], ['a', 'A'], ['s', 'S'], ['d', 'D'], ['f', 'F'], ['g', 'G'], ['h', 'H'], ['j', 'J'], ['k', 'K'], ['l', 'L'], [';', ':'], [\"'\", '\"'], ['Enter', 'Enter'], ['Shift', 'Shift'], ['z', 'Z'], ['x', 'X'], ['c', 'C'], ['v', 'V'], ['b', 'B'], ['n', 'N'], ['m', 'M'], [',', '<'], ['.', '>'], ['/', '?'], [''], ['Shift', 'Shift']],\n  InternationalUS: [// US International Keyboard\n  ['`', '~'], ['1', '!'], ['2', '@', '\\u00b2'], ['3', '#', '\\u00b3'], ['4', '$', '\\u00a4', '\\u00a3'], ['5', '%', '\\u20ac'], ['6', '^', '\\u00bc'], ['7', '&', '\\u00bd'], ['8', '*', '\\u00be'], ['9', '(', '\\u2018'], ['0', ')', '\\u2019'], ['-', '_', '\\u00a5'], ['=', '+', '\\u00d7', '\\u00f7'], ['BackSpace', 'BackSpace'], ['Tab', 'Tab'], ['q', 'Q', '\\u00e4', '\\u00c4'], ['w', 'W', '\\u00e5', '\\u00c5'], ['e', 'E', '\\u00e9', '\\u00c9'], ['r', 'R', '\\u00ae'], ['t', 'T', '\\u00fe', '\\u00de'], ['y', 'Y', '\\u00fc', '\\u00dc'], ['u', 'U', '\\u00fa', '\\u00da'], ['i', 'I', '\\u00ed', '\\u00cd'], ['o', 'O', '\\u00f3', '\\u00d3'], ['p', 'P', '\\u00f6', '\\u00d6'], ['[', '{', '\\u00ab'], [']', '}', '\\u00bb'], ['\\\\', '|', '\\u00ac', '\\u00a6'], ['CapsLock', 'CapsLock'], ['a', 'A', '\\u00e1', '\\u00c1'], ['s', 'S', '\\u00df', '\\u00a7'], ['d', 'D', '\\u00f0', '\\u00d0'], ['f', 'F'], ['g', 'G'], ['h', 'H'], ['j', 'J'], ['k', 'K'], ['l', 'L', '\\u00f8', '\\u00d8'], [';', ':', '\\u00b6', '\\u00b0'], [\"'\", '\"', '\\u00b4', '\\u00a8'], ['Enter', 'Enter'], ['Shift', 'Shift'], ['z', 'Z', '\\u00e6', '\\u00c6'], ['x', 'X'], ['c', 'C', '\\u00a9', '\\u00a2'], ['v', 'V'], ['b', 'B'], ['n', 'N', '\\u00f1', '\\u00d1'], ['m', 'M', '\\u00b5'], [',', '<', '\\u00e7', '\\u00c7'], ['.', '>'], ['/', '?', '\\u00bf'], [''], ['Shift', 'Shift']]\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (languagesList);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/model/languages.js\n");

/***/ })

/******/ });